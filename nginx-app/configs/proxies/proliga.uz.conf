map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen 80;
    server_name proliga.uz *.proliga.uz;

    # Redirect all HTTP to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name proliga.uz *.proliga.uz;

    # root "D:/FSystem/DEV/Git/proliga.uz";
    index index.html index.htm index.php;
    # SSL
    ssl_certificate     /etc/nginx/configs/app-ssl/proliga.uz/ssl.crt;
    ssl_certificate_key /etc/nginx/configs/app-ssl/proliga.uz/ssl.key;

    ssl_session_timeout 5m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;   

    charset utf-8;

    location /.well-known {
        autoindex on;
    }

    location /static/ {
        root /app/static/;
        autoindex on;
    }

    location / {
        proxy_pass  http://node-proliga:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        proxy_connect_timeout 900;
        proxy_send_timeout 900;
        proxy_read_timeout 900;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        proxy_temp_file_write_size 256k;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    location ~ /\.ht {
        deny all;
    }
}
